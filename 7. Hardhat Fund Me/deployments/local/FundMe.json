{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x73169d598036a3f49b5efb877cf5ea3c2ee335ab5bdce9a55e14764895672f96",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "912842",
    "logsBloom": "0x
    "blockHash": "0x48d7e00b8d013e57839ed885342a79af1d8343f0d22a3f32ef8da66b2d8ceaca",
    "transactionHash": "0x73169d598036a3f49b5efb877cf5ea3c2ee335ab5bdce9a55e14764895672f96",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "912842",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
  ],
  "numDeployments": 1,
  "solcInputHash": "e3634de1b62638b907e762baad2c9ee7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    uint public test;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConverstionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough!\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // Reset the mapping\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // Reset the array\\n        funders = new address[](0);\\n        // Withdraw the funds\\n        // bytes objects are array, so they need to be in memory\\n        (bool callSuccess, ) =\\n        payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner {\\n        //require(msg.sender == i_owner, \\\"Sender is not the owner!\\\");\\n        if(msg.sender != i_owner) { revert NotOwner(); }\\n        _; // execute the rest of the code in the function that used this modifier\\n    }\\n\\n    function getPrice() public view returns(uint256){\\n        return PriceConverter.getPrice(priceFeed);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\",\"keccak256\":\"0xd6e75f0c3c76f948d53e5b73dc821d45271e79e55aa0e6d299f6da725c20ea03\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        (\\n            /*uint80 roundID*/,\\n            int256 price,\\n            /*uint startedAt*/,\\n            /*uint timeStamp*/,\\n            /*uint80 answeredInRound*/\\n        ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD, an 8 decimal places value\\n        // 3000.00000000\\n\\n        // We want to match up the return value to the same units as\\n        // msg.value (uint256) in the fund() function\\n        // We need to return the price as an unsigned 18 digits value\\n        // We do type casting\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConverstionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // Both ethPrice and ethAmount have 18 additional decimal places\\n        // We've to divide them by 1e18, or else the result would have 36\\n        // decimal places\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xc7b186815c3241bc9a647456037603b057d07113eb723f056deb208c696ced5a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c806398d5fdca1161005957806398d5fdca1461014d578063b60d428814610178578063dba6335f14610182578063dc0d3dff146101ad578063f8a8fd6d146101ea57610099565b80633ccfd60b146100a35780633e47d6f3146100ba5780636b69a592146100f7578063741bef1a1461012257610099565b3661009957610097610215565b005b6100a1610215565b005b3480156100af57600080fd5b506100b861034f565b005b3480156100c657600080fd5b506100e160048036038101906100dc919061085a565b61058f565b6040516100ee91906108a0565b60405180910390f35b34801561010357600080fd5b5061010c6105a7565b60405161011991906108a0565b60405180910390f35b34801561012e57600080fd5b506101376105b3565b604051610144919061091a565b60405180910390f35b34801561015957600080fd5b506101626105d9565b60405161016f91906108a0565b60405180910390f35b610180610215565b005b34801561018e57600080fd5b5061019761060b565b6040516101a49190610944565b60405180910390f35b3480156101b957600080fd5b506101d460048036038101906101cf919061098b565b61062f565b6040516101e19190610944565b60405180910390f35b3480156101f657600080fd5b506101ff61066e565b60405161020c91906108a0565b60405180910390f35b678ac7230489e80000610253600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067490919063ffffffff16565b1015610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028b90610a15565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103469190610a64565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561047f5760008082815481106103f9576103f8610aba565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047790610ae9565b9150506103d7565b50600067ffffffffffffffff81111561049b5761049a610b32565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df929190610750565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050690610b92565b60006040518083038185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b505090508061058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610bf3565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b678ac7230489e8000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610606600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166106b0565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061063f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600080610680836106b0565b90506000670de0b6b3a764000085836106999190610c13565b6106a39190610c9c565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f957600080fd5b505afa15801561070d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107319190610d5a565b5050509150506402540be400816107489190610dd5565b915050919050565b8280548282559060005260206000209081019282156107c9579160200282015b828111156107c85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610770565b5b5090506107d691906107da565b5090565b5b808211156107f35760008160009055506001016107db565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610827826107fc565b9050919050565b6108378161081c565b811461084257600080fd5b50565b6000813590506108548161082e565b92915050565b6000602082840312156108705761086f6107f7565b5b600061087e84828501610845565b91505092915050565b6000819050919050565b61089a81610887565b82525050565b60006020820190506108b56000830184610891565b92915050565b6000819050919050565b60006108e06108db6108d6846107fc565b6108bb565b6107fc565b9050919050565b60006108f2826108c5565b9050919050565b6000610904826108e7565b9050919050565b610914816108f9565b82525050565b600060208201905061092f600083018461090b565b92915050565b61093e8161081c565b82525050565b60006020820190506109596000830184610935565b92915050565b61096881610887565b811461097357600080fd5b50565b6000813590506109858161095f565b92915050565b6000602082840312156109a1576109a06107f7565b5b60006109af84828501610976565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b60006109ff6013836109b8565b9150610a0a826109c9565b602082019050919050565b60006020820190508181036000830152610a2e816109f2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a6f82610887565b9150610a7a83610887565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aaf57610aae610a35565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610af482610887565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b2757610b26610a35565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b7c600083610b61565b9150610b8782610b6c565b600082019050919050565b6000610b9d82610b6f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bdd600b836109b8565b9150610be882610ba7565b602082019050919050565b60006020820190508181036000830152610c0c81610bd0565b9050919050565b6000610c1e82610887565b9150610c2983610887565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6257610c61610a35565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ca782610887565b9150610cb283610887565b925082610cc257610cc1610c6d565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cec81610ccd565b8114610cf757600080fd5b50565b600081519050610d0981610ce3565b92915050565b6000819050919050565b610d2281610d0f565b8114610d2d57600080fd5b50565b600081519050610d3f81610d19565b92915050565b600081519050610d548161095f565b92915050565b600080600080600060a08688031215610d7657610d756107f7565b5b6000610d8488828901610cfa565b9550506020610d9588828901610d30565b9450506040610da688828901610d45565b9350506060610db788828901610d45565b9250506080610dc888828901610cfa565b9150509295509295909350565b6000610de082610d0f565b9150610deb83610d0f565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e2a57610e29610a35565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e6757610e66610a35565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ea457610ea3610a35565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ee157610ee0610a35565b5b82820290509291505056fea264697066735822122050f527bc9a76e944981fa4c9ba995030855ba937e0274bc35fcb8cd1c779358464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 332,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "test",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 335,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}